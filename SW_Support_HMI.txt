
////////////////////////////////////////////////////////////
// STS BOOL
////////////////////////////////////////////////////////////

(*Statistics*)    IO.Pump_Dredge.Sts.Maintenance_Required;                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[0]   // Maintenance required on dredging pump
(*Statistics*)    IO.Excavators.Sts.Maintenance_Required;                          := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[1]   // Maintenance required on excavators
(*Statistics*)    IO.Engine.Sts.Maintenance_Required;                              := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[2]   // Maintenance required on engine
(*Statistics*)    x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[3]   // 
(*Statistics*)    x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[4]   // 
(*Statistics*)    x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[5]   // 
(*Statistics*)    x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[6]   // 
(*Statistics*)    x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[7]   // 
(*Statistics*)    x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[8]   // 
(*Statistics*)    x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[9]   // 
(*Hydraulic*)     IO.Oil.Sts.Filter_1_Ok;                                          := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[10]  // Oil filter 1 ok - 0=not ok , 1=ok
(*Hydraulic*)     IO.Oil.Sts.Filter_2_Ok;                                          := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[11]  // Oil filter 2 ok - 0=not ok , 1=ok
(*Hydraulic*)     IO.Oil.Sts.Filter_3_Ok;                                          := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[12]  // Oil filter 3 ok - 0=not ok , 1=ok
(*Hydraulic*)     IO.Oil.Sts.Filter_4_Ok;                                          := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[13]  // Oil filter 4 ok - 0=not ok , 1=ok
(*Hydraulic*)     IO.Oil.Sts.Filter_5_Ok;                                          := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[14]  // Oil filter 5 ok - 0=not ok , 1=ok
(*Hydraulic*)     IO.Oil.Sts.Filter_6_Ok;                                          := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[15]  // Oil filter 6 ok - 0=not ok , 1=ok
(*Hydraulic*)     IO.Oil.Sts.Filter_7_Ok;                                          := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[16]  // Oil filter 7 ok - 0=not ok , 1=ok
(*Hydraulic*)     IO.Oil.Sts.Filter_8_Ok;                                          := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[17]  // Oil filter 8 ok - 0=not ok , 1=ok
(*Hydraulic*)     x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[18]  // 
(*Hydraulic*)     x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[19]  // 
(*Hydraulic*)     IO.Oil.Sts.Oil_Lvl_Above_Warning;                                := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[20]  // Oil level is above the warning level
(*Hydraulic*)     IO.Oil.Sts.Oil_Lvl_Above_Alarm;                                  := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[21]  // Oil level is above the alarm level
(*Hydraulic*)     IO.Oil.Sts.Oil_Temp_Below_Warning;                               := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[22]  // Oil temperature is below the warning level
(*Hydraulic*)     IO.Oil.Sts.Oil_Temp_Below_Alarm;                                 := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[23]  // Oil temperature is below the alarm level
(*Hydraulic*)     x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[24]  // 
(*Hydraulic*)     IO.Oil.Sts.Oil_Lvl_Reading_Error;                                := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[25]  // Oil level sensors are providing inconsistent readings
(*Hydraulic*)     IO.Oil.Sts.Oil_Temp_Reading_Error;                               := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[26]  // Oil temp sensors are providing inconsistent readings
(*Hydraulic*)     x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[27]  // 
(*Hydraulic*)     x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[28]  // 
(*Hydraulic*)     x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[29]  // 
(*Dredging pump*) IO.Pump_Dredge.Sts.Running;                                      := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[30]  // Dredging pump is running
(*Dredging pump*) IO.Pump_Dredge.Sts.Oil_Pressure.Main_Circuit.xError_Sensor;      := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[31]  // Pressure sensor error
(*Dredging pump*) IO.Pump_Dredge.Sts.Oil_Pressure.Secondary_Circuit.xError_Sensor; := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[32]  // Pressure sensor error
(*Dredging pump*) x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[33]  // 
(*Dredging pump*) x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[34]  // 
(*Dredging pump*) IO.Pump_Dredge.Sts.Hydraulic_Cmd_Err;                            := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[35]  // Dredging pump command is in error (could be pump or valve)
(*Dredging pump*) x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[36]  // 
(*Dredging pump*) x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[37]  // 
(*Dredging pump*) x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[38]  // 
(*Dredging pump*) x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[39]  // 
(*Excavators*)    IO.Excavators.Sts.Running;                                       := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[40]  // Excavators are running
(*Excavators*)    IO.Excavators.Sts.Stopped;                                       := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[41]  // Excavators are stopped
(*Excavators*)    IO.Excavators.Sts.Work_Running;                                  := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[42]  // Excavators are running in work direction
(*Excavators*)    IO.Excavators.Sts.Reverse_Running;                               := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[43]  // Excavators are running in reverse direction
(*Excavators*)    x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[44]  // 
(*Excavators*)    IO.Excavators.Sts.Valve_Error;                                   := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[45]  // Excavator valve is in error state
(*Excavators*)    IO.Excavators.Sts.Oil_Pressure.Main_Circuit.xError_Sensor;       := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[46]  // Pressure sensor error
(*Excavators*)    x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[47]  // 
(*Excavators*)    x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[48]  // 
(*Excavators*)    x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[49]  // 
(*Excavators*)    x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[50]  // 
(*Excavators*)    x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[51]  // 
(*Excavators*)    x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[52]  // 
(*Excavators*)    x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[53]  // 
(*Excavators*)    x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[54]  // 
(*Excavators*)    x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[55]  // 
(*Excavators*)    x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[56]  // 
(*Excavators*)    x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[57]  // 
(*Excavators*)    x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[58]  // 
(*Excavators*)    x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[59]  // 
(*Propeller*)     IO.Propeller.Cmd.Up;                                             := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[60]  // 
(*Propeller*)     IO.Propeller.Cmd.Down;                                           := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[61]  // 
(*Propeller*)     IO.Propeller.Cmd.Left;                                           := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[62]  // 
(*Propeller*)     IO.Propeller.Cmd.Right;                                          := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[63]  // 
(*Propeller*)     IO.Propeller.Cmd.Forward;                                        := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[64]  // 
(*Propeller*)     IO.Propeller.Cmd.Backward;                                       := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[65]  // 
(*Propeller*)     IO.Propeller.Cmd.Joystick_Human_Presence;                        := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[66]  // 
(*Propeller*)     x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[67]  // 
(*Propeller*)     x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[68]  // 
(*Propeller*)     x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[69]  // 
(*Propeller*)     IO.Propeller.Sts.Hydraulic_Valve_Error;                          := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[70]  // 
(*Propeller*)     IO.Propeller.Sts.Oil_Pressure.Main_Circuit.xError_Sensor;        := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[71]  // Pressure sensor error
(*Propeller*)     x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[72]  // 
(*Propeller*)     x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[73]  // 
(*Propeller*)     IO.Propeller.Cmd.Joystick_Human_Presence;                        := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[74]  // The enable button is pressed properly to use the propeller
(*Propeller*)     IO.Propeller.Sts.Running;                                        := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[75]  // The propeller is running fw/bw
(*Propeller*)     x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[76]  // 
(*Propeller*)     x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[77]  // 
(*Propeller*)     x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[78]  // 
(*Propeller*)     x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[79]  // 
(*Hoist*)         IO.Hoist.Cmd.Wind;                                               := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[80]  // 
(*Hoist*)         IO.Hoist.Cmd.Unwind;                                             := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[81]  // 
(*Hoist*)         x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[82]  // 
(*Hoist*)         x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[83]  // 
(*Hoist*)         x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[84]  // 
(*Hoist*)         IO.Hoist.Sts.Pump_Depth.xError_Sensor;                           := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[85]  // Encoder depth error
(*Hoist*)         IO.Hoist.Sts.Oil_Pressure.Main_Circuit.xError_Sensor;            := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[86]  // Pressure sensor error
(*Hoist*)         x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[87]  // 
(*Hoist*)         x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[88]  // 
(*Hoist*)         x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[89]  // 
(*Winches*)       IO.Winches.Cmd.FL_Wind;                                          := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[90]  // The operator is commanding  the winches
(*Winches*)       IO.Winches.Cmd.FL_Unwind;                                        := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[91]  // The operator is commanding  the winches
(*Winches*)       IO.Winches.Cmd.RL_Wind;                                          := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[92]  // The operator is commanding  the winches
(*Winches*)       IO.Winches.Cmd.RL_Unwind;                                        := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[93]  // The operator is commanding  the winches
(*Winches*)       IO.Winches.Cmd.FR_Wind;                                          := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[94]  // The operator is commanding  the winches
(*Winches*)       IO.Winches.Cmd.FR_Unwind;                                        := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[95]  // The operator is commanding  the winches
(*Winches*)       IO.Winches.Cmd.RR_Wind;                                          := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[96]  // The operator is commanding  the winches
(*Winches*)       IO.Winches.Cmd.RR_Unwind;                                        := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[97]  // The operator is commanding  the winches
(*Winches*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[98]  // 
(*Winches*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[99]  // 
(*Winches*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[100] // 
(*Winches*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[101] // 
(*Winches*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[102] // 
(*Winches*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[103] // 
(*Winches*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[104] // 
(*Winches*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[105] // 
(*Winches*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[106] // 
(*Winches*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[107] // 
(*Winches*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[108] // 
(*Winches*)       IO.Pvg_Services.Sts.Oil_Pressure.xError_Sensor;                  := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[109] // Pressure sensor error
(*Fuel Tank*)     IO.Fuel_Tank.Sts.Fuel_Level_1.xError_Sensor;                     := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[110] // Anomaly on fuel tank level sensor
(*Fuel Tank*)     IO.Fuel_Tank.Sts.Fuel_Level_2.xError_Sensor;                     := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[111] // Anomaly on fual tenk level sensor
(*Fuel Tank*)     IO.Fuel_Tank.Sts.Tank_1_Level_Low;                               := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[112] // Fuel tank 1 below threshold
(*Fuel Tank*)     IO.Fuel_Tank.Sts.Tank_2_Level_Low;                               := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[113] // Fuel tank 2 below threshold
(*Fuel Tank*)     IO.Fuel_Tank.Sts.Tank_1_Level_Empty;                             := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[114] // Fuel tank 1 empty
(*Fuel Tank*)     IO.Fuel_Tank.Sts.Tank_2_Level_Empty;                             := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[115] // Fuel tank 2 empty
(*Fuel Tank*)     IO.Fuel_Tank.Cmd.Left_Tank;                                      := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[116] // Left tank in use
(*Fuel Tank*)     IO.Fuel_Tank.Cmd.Right_Tank;                                     := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[117] // Right tank in use
(*Fuel Tank*)     x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[118] // 
(*Fuel Tank*)     x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[119] // 
(*Mach Status*)   IO.Internal_Signal.Sts.All_Parameters_Received;                  := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[120] // All parameters written properly after a restore
(*Mach Status*)   IO.Internal_Signal.Sts.Error_Writing_All_Parameter;              := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[121] // Error during writing all parameters
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[122] // 
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[123] // 
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[124] // 
(*Mach Status*)   IO.System.Sts.PLC_ShuttingDown;                                  := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[125] // PLC is shutting down
(*Mach Status*)   IO.System.Cmd.Switch_Off_HMI;                                    := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[126] // Command HMI shutdown
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[127] // 
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[128] // 
(*Mach Status*)   IO.MachineMode.Sts.Inhibit_Change_Mode_To_Navi;                  := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[129] // The navi mode switching is inhibited by some conditions
(*Mach Status*)   IO.MachineMode.Sts.Inhibit_Change_Mode_To_Work;                  := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[130] // The work mode switching is inhibited by some conditions
(*Mach Status*)   IO.MachineMode.Sts.Inhibit_Navi_Show_Popup;                      := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[131] // Show popup navi mode is inhibited
(*Mach Status*)   IO.MachineMode.Sts.Inhibit_Work_Show_Popup;                      := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[132] // Show popup work mode is inhibited
(*Mach Status*)   IO.MachineMode.Sts.Press_Enable_Show_Popup;                      := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[133] // Show popup enable is not pressed correctly
(*Mach Status*)   IO.MachineMode.Sts.NotPossible_In_Work_Show_Popup;               := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[134] // Operation not possible in work mode
(*Mach Status*)   IO.MachineMode.Sts.NotPossible_In_Navi_Show_Popup;               := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[135] // Operation not possible in navi mode
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[136] // 
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[137] // 
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[138] // 
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[139] // 
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[140] // 
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[141] // 
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[142] // 
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[143] // 
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[144] // 
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[145] // 
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[146] // 
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[147] // 
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[148] // 
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[149] // 
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[150] // 
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[151] // 
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[152] // 
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[153] // 
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[154] // 
(*Mach Status*)   IO.Event.Sts.Warning_Present;                                    := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[155] // At least one warning is active in the machine
(*Mach Status*)   IO.Event.Sts.Alarm_Present;                                      := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[156] // At least one alarm is active in the machine
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[157] // 
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[158] // 
(*Mach Status*)   x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[159] // 
(*Network*)       IO.Network.CAN.Sts.DeviceStatus._05_CR2016_CP_Connection_Ok;     := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[160] // 
(*Network*)       IO.Network.CAN.Sts.DeviceStatus._06_CR2016_OC_Connection_Ok;     := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[161] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[162] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[163] // 
(*Network*)       IO.Network.CAN.Sts.DeviceStatus._15_CR2050_HYD_Connection_Ok;    := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[164] // 
(*Network*)       IO.Network.CAN.Sts.DeviceStatus._20_CR2012_Connection_Ok;        := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[165] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[166] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[167] // 
(*Network*)       IO.Network.CAN.Sts.DeviceStatus._20_CR2012_Connection_Ok;        := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[168] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[169] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[170] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[171] // 
(*Network*)       IO.Network.CAN.Sts.DeviceStatus.Engine_Connection_Ok;            := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[172] // 
(*Network*)       IO.Network.CAN.Sts.DeviceStatus.Joystick_Connection_Ok;          := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[173] // 
(*Network*)       IO.Network.CAN.Sts.DeviceStatus.Inclinometer_Connection_Ok;      := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[174] // 
(*Network*)       IO.Network.CAN.Sts.DeviceStatus.Propeller_Encoder_Connection_Ok; := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[175] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[176] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[177] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[178] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[179] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[180] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[181] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[182] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[183] // 
(*Network*)       IO.Network.CAN.Sts.Ch_Status[0].xActive;                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[184] // Can diagnostic Channel 0
(*Network*)       IO.Network.CAN.Sts.Ch_Status[0].xError;                          := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[185] // Can diagnostic Channel 0
(*Network*)       IO.Network.CAN.Sts.Ch_Status[0].xWarningRx;                      := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[186] // Can diagnostic Channel 0
(*Network*)       IO.Network.CAN.Sts.Ch_Status[0].xWarningTx;                      := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[187] // Can diagnostic Channel 0
(*Network*)       IO.Network.CAN.Sts.Ch_Status[1].xActive;                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[188] // Can diagnostic Channel 1
(*Network*)       IO.Network.CAN.Sts.Ch_Status[1].xError;                          := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[189] // Can diagnostic Channel 1
(*Network*)       IO.Network.CAN.Sts.Ch_Status[1].xWarningRx;                      := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[190] // Can diagnostic Channel 1
(*Network*)       IO.Network.CAN.Sts.Ch_Status[1].xWarningTx;                      := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[191] // Can diagnostic Channel 1
(*Network*)       IO.Network.CAN.Sts.Ch_Status[2].xActive;                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[192] // Can diagnostic Channel 2
(*Network*)       IO.Network.CAN.Sts.Ch_Status[2].xError;                          := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[193] // Can diagnostic Channel 2
(*Network*)       IO.Network.CAN.Sts.Ch_Status[2].xWarningRx;                      := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[194] // Can diagnostic Channel 2
(*Network*)       IO.Network.CAN.Sts.Ch_Status[2].xWarningTx;                      := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[195] // Can diagnostic Channel 2
(*Network*)       IO.Network.CAN.Sts.Ch_Status[3].xActive;                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[196] // Can diagnostic Channel 3
(*Network*)       IO.Network.CAN.Sts.Ch_Status[3].xError;                          := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[197] // Can diagnostic Channel 3
(*Network*)       IO.Network.CAN.Sts.Ch_Status[3].xWarningRx;                      := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[198] // Can diagnostic Channel 3
(*Network*)       IO.Network.CAN.Sts.Ch_Status[3].xWarningTx;                      := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[199] // Can diagnostic Channel 3
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[200] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[201] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[202] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[203] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[204] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[205] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[206] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[207] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[208] // 
(*Network*)       x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[209] // 
(*Engine*)        IO.Engine.Sts.Running;                                           := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[210] // 
(*Engine*)        IO.Engine.Sts.Warning;                                           := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[211] // 
(*Engine*)        IO.Engine.Sts.Alarm;                                             := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[212] // 
(*Engine*)        IO.Engine.Sts.Low_Oil_Pressure;                                  := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[213] // 
(*Engine*)        IO.Engine.Sts.Derating_Active;                                   := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[214] // 
(*Engine*)        IO.Engine.Sts.Regen.Request;                                     := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[215] // 
(*Engine*)        IO.Engine.Sts.Regen.Inhibit;                                     := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[216] // 
(*Engine*)        IO.Engine.Sts.Regen.Active;                                      := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[217] // 
(*Engine*)        IO.Engine.Sts.Regen.Temperature;                                 := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[218] // 
(*Engine*)        IO.Engine.Sts.Regen.Error;                                       := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[219] // 
(*Engine*)        IO.Engine.Sts.WaitBeforeCuttingPower;                            := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[220] // Wait to shutdown PLC untile hte stage V purge is complete
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[221] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[222] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[223] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[224] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[225] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[226] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[227] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[228] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[229] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[230] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[231] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[232] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[233] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[234] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[235] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[236] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[237] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[238] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[239] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[240] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[241] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[242] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[243] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[244] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[245] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[246] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[247] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[248] // 
(*Engine*)        x_Spare;                                                         := _102_From_PLC_to_HMI_MachStatus.STS_BOOL[249] // 

////////////////////////////////////////////////////////////
// STS INT
////////////////////////////////////////////////////////////

(*Statistics*)     IO.Statistics.Sts.Dredging_Pump_Service_Hours;                := _102_From_PLC_to_HMI_MachStatus.STS_INT[0]   //[h]     Dredging pump working hours since last maintenance
(*Statistics*)     IO.Statistics.Sts.Excavators_Service_Hours;                   := _102_From_PLC_to_HMI_MachStatus.STS_INT[1]   //[h]     Excavator working hours since last maintenance
(*Statistics*)     IO.Statistics.Sts.Engine_Service_Hours;                       := _102_From_PLC_to_HMI_MachStatus.STS_INT[2]   //[h]     Engine running hours since last maintenance
(*Statistics*)     i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[3]   //[-]     
(*Statistics*)     i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[4]   //[-]     
(*Statistics*)     i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[5]   //[-]     
(*Statistics*)     i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[6]   //[-]     
(*Statistics*)     i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[7]   //[-]     
(*Statistics*)     i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[8]   //[-]     
(*Statistics*)     i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[9]   //[-]     
(*Hydraulic*)      IO.Pump_Dredge.Sts.Setpoint_Perc_Ramped_Main;                 := _102_From_PLC_to_HMI_MachStatus.STS_INT[10]  //[%]     Dredging pump speed command
(*Hydraulic*)      IO.Pump_Dredge.Sts.Oil_Pressure.Main_Circuit.iValue_x10;      := _102_From_PLC_to_HMI_MachStatus.STS_INT[11]  //[bar]   Dredging pump oil pressure main circuit
(*Hydraulic*)      IO.Pump_Dredge.Sts.Oil_Pressure.Secondary_Circuit.iValue_x10; := _102_From_PLC_to_HMI_MachStatus.STS_INT[12]  //[bar]   Dredging pump oil pressure secondary circuit
(*Hydraulic*)      IO.Pump_Dredge.Sts.Oil_Flow.iValue_x10;                       := _102_From_PLC_to_HMI_MachStatus.STS_INT[13]  //[l/min] Dredging pump oil flow
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[14]  //[-]     
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[15]  //[-]     
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[16]  //[-]     
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[17]  //[-]     
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[18]  //[-]     
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[19]  //[-]     
(*Hydraulic*)      IO.Excavators.Sts.Setpoint_Percentage;                        := _102_From_PLC_to_HMI_MachStatus.STS_INT[20]  //[%]     Excavators speed command
(*Hydraulic*)      IO.Excavators.Sts.Oil_Pressure.Main_Circuit.iValue_x10;       := _102_From_PLC_to_HMI_MachStatus.STS_INT[21]  //[bar]   Excavators oil pressure main circuit
(*Hydraulic*)      IO.Excavators.Sts.Oil_Pressure.Booster.iValue_x10;            := _102_From_PLC_to_HMI_MachStatus.STS_INT[22]  //[bar]   Excavators oil pressure booster
(*Hydraulic*)      IO.Excavators.Sts.Oil_Flow.iValue_x10;                        := _102_From_PLC_to_HMI_MachStatus.STS_INT[23]  //[l/min] Excavators oil flow
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[24]  //[-]     
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[25]  //[-]     
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[26]  //[-]     
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[27]  //[-]     
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[28]  //[-]     
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[29]  //[-]     
(*Hydraulic*)      IO.Propeller.Sts.Setpoint_Perc_Ramped_Main;                   := _102_From_PLC_to_HMI_MachStatus.STS_INT[30]  //[%]     Propeller speed command
(*Hydraulic*)      IO.Propeller.Sts.Oil_Pressure.Main_Circuit.iValue_x10;        := _102_From_PLC_to_HMI_MachStatus.STS_INT[31]  //[bar]   Propeller oil pressure
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[32]  //[-]     
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[33]  //[-]     
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[34]  //[-]     
(*Hydraulic*)      IO.Hoist.Sts.Oil_Pressure.Main_Circuit.iValue_x10;            := _102_From_PLC_to_HMI_MachStatus.STS_INT[35]  //[bar]   Hoist oil pressure
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[36]  //[-]     
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[37]  //[-]     
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[38]  //[-]     
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[39]  //[-]     
(*Hydraulic*)      IO.Pvg_Services.Sts.Oil_Pressure.iValue_x10;                  := _102_From_PLC_to_HMI_MachStatus.STS_INT[40]  //[bar]   Service PVG oil pressure
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[41]  //[-]     
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[42]  //[-]     
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[43]  //[-]     
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[44]  //[-]     
(*Hydraulic*)      IO.Oil.Sts.Oil_Level.iValue_x10;                              := _102_From_PLC_to_HMI_MachStatus.STS_INT[45]  //[%]     Oil tank level
(*Hydraulic*)      IO.Oil.Sts.Oil_Temp.iValue_x10;                               := _102_From_PLC_to_HMI_MachStatus.STS_INT[46]  //[°C]    Oil tank temperature
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[47]  //[-]     
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[48]  //[-]     
(*Hydraulic*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[49]  //[-]     
(*Slurry*)         IO.Slurry.Sts.Density.iValue_x10;                             := _102_From_PLC_to_HMI_MachStatus.STS_INT[50]  //[g/l]   Density of slurry
(*Slurry*)         IO.Slurry.Sts.Flow.iValue_x10;                                := _102_From_PLC_to_HMI_MachStatus.STS_INT[51]  //[m3/h]  Flow of slurry
(*Slurry*)         IO.Slurry.Sts.Production;                                     := _102_From_PLC_to_HMI_MachStatus.STS_INT[52]  //[Kg/h]  Actual production
(*Slurry*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[53]  //[-]     
(*Slurry*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[54]  //[-]     
(*Machine status*) IO.System.Sts.Battery_Voltage;                                := _102_From_PLC_to_HMI_MachStatus.STS_INT[55]  //[V]     Battery voltage
(*Machine status*) IO.Internal_Signal.Sts.MachineStatus;                         := _102_From_PLC_to_HMI_MachStatus.STS_INT[56]  //[-]     Machine status
(*Machine status*) IO.Internal_Signal.Sts.WorkingMode;                           := _102_From_PLC_to_HMI_MachStatus.STS_INT[57]  //[-]     Working mode (1=Navigation,2=Dredging)
(*Machine status*) i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[58]  //[-]     
(*Machine status*) i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[59]  //[-]     
(*Machine status*) i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[60]  //[-]     
(*Machine status*) i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[61]  //[-]     
(*Machine status*) i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[62]  //[-]     
(*Machine status*) i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[63]  //[-]     
(*Machine status*) IO.System.Sts.INT_From_PLC;                                   := _102_From_PLC_to_HMI_MachStatus.STS_INT[64]  //[-]     Incremental INT to test the communication
(*Engine*)         IO.Engine.Sts.Rpm;                                            := _102_From_PLC_to_HMI_MachStatus.STS_INT[65]  //[rpm]   
(*Engine*)         IO.Engine.Sts.Torque;                                         := _102_From_PLC_to_HMI_MachStatus.STS_INT[66]  //[%]     
(*Engine*)         IO.Fuel_Tank.Sts.Fuel_Level_1.iValue_x10;                     := _102_From_PLC_to_HMI_MachStatus.STS_INT[67]  //[%]     
(*Engine*)         IO.Fuel_Tank.Sts.Fuel_Level_2.iValue_x10;                     := _102_From_PLC_to_HMI_MachStatus.STS_INT[68]  //[%]     
(*Engine*)         IO.Engine.Sts.Fuel_Consumption;                               := _102_From_PLC_to_HMI_MachStatus.STS_INT[69]  //[l/h]   
(*Engine*)         IO.Engine.Sts.Oil_Pressure;                                   := _102_From_PLC_to_HMI_MachStatus.STS_INT[70]  //[kpa]   
(*Engine*)         IO.Engine.Sts.Water_Temp;                                     := _102_From_PLC_to_HMI_MachStatus.STS_INT[71]  //[°C]    
(*Engine*)         IO.Engine.Sts.IntakeAirTemp;                                  := _102_From_PLC_to_HMI_MachStatus.STS_INT[72]  //[°C]    
(*Engine*)         IO.Engine.Sts.Load;                                           := _102_From_PLC_to_HMI_MachStatus.STS_INT[73]  //[%]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[74]  //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[75]  //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[76]  //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[77]  //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[78]  //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[79]  //[-]     
(*Engine*)         IO.Engine.Sts.Urea_Level;                                     := _102_From_PLC_to_HMI_MachStatus.STS_INT[80]  //[%]     
(*Engine*)         IO.Engine.Sts.Urea_Temp;                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[81]  //[°C]    
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[82]  //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[83]  //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[84]  //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[85]  //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[86]  //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[87]  //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[88]  //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[89]  //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[90]  //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[91]  //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[92]  //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[93]  //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[94]  //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[95]  //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[96]  //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[97]  //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[98]  //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[99]  //[-]     
(*Engine*)         IO.Engine.Sts.Percentage_Shutting_Down;                       := _102_From_PLC_to_HMI_MachStatus.STS_INT[100] //[%]     Percentage left until power can be cut from the motor
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[101] //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[102] //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[103] //[-]     
(*Engine*)         i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[104] //[-]     
(*Propeller*)      IO.Propeller.Sts.Joystick.Joystick_Axis_X;                    := _102_From_PLC_to_HMI_MachStatus.STS_INT[105] //[-]     
(*Propeller*)      IO.Propeller.Sts.Joystick.Joystick_Axis_Y;                    := _102_From_PLC_to_HMI_MachStatus.STS_INT[106] //[-]     
(*Propeller*)      IO.Propeller.Sts.Encoder.iValue_x10;                          := _102_From_PLC_to_HMI_MachStatus.STS_INT[107] //[-]     
(*Propeller*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[108] //[-]     
(*Propeller*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[109] //[-]     
(*Propeller*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[110] //[-]     
(*Propeller*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[111] //[-]     
(*Propeller*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[112] //[-]     
(*Propeller*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[113] //[-]     
(*Propeller*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[114] //[-]     
(*Movements*)      IO.Hoist.Sts.Pump_Depth.iValue_x10;                           := _102_From_PLC_to_HMI_MachStatus.STS_INT[115] //[dm]    Pump depth
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[116] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[117] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[118] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[119] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[120] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[121] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[122] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[123] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[124] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[125] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[126] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[127] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[128] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[129] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[130] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[131] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[132] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[133] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[134] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[135] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[136] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[137] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[138] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[139] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[140] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[141] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[142] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[143] //[-]     
(*Movements*)      i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[144] //[-]     
(*CAN Network*)    IO.Network.CAN.Sts.Ch_Status[0].iErrorCntRx;                  := _102_From_PLC_to_HMI_MachStatus.STS_INT[145] //[-]     Can diagnostic Channel 0
(*CAN Network*)    IO.Network.CAN.Sts.Ch_Status[0].iErrorCntTx;                  := _102_From_PLC_to_HMI_MachStatus.STS_INT[146] //[-]     Can diagnostic Channel 0
(*CAN Network*)    IO.Network.CAN.Sts.Ch_Status[0].DiagInfo;                     := _102_From_PLC_to_HMI_MachStatus.STS_INT[147] //[-]     Can diagnostic Channel 0
(*CAN Network*)    IO.Network.CAN.Sts.Ch_Status[0].iBusLoad;                     := _102_From_PLC_to_HMI_MachStatus.STS_INT[148] //[-]     Can diagnostic Channel 0
(*CAN Network*)    IO.Network.CAN.Sts.Ch_Status[1].iErrorCntRx;                  := _102_From_PLC_to_HMI_MachStatus.STS_INT[149] //[-]     Can diagnostic Channel 1
(*CAN Network*)    IO.Network.CAN.Sts.Ch_Status[1].iErrorCntTx;                  := _102_From_PLC_to_HMI_MachStatus.STS_INT[150] //[-]     Can diagnostic Channel 1
(*CAN Network*)    IO.Network.CAN.Sts.Ch_Status[1].DiagInfo;                     := _102_From_PLC_to_HMI_MachStatus.STS_INT[151] //[-]     Can diagnostic Channel 1
(*CAN Network*)    IO.Network.CAN.Sts.Ch_Status[1].iBusLoad;                     := _102_From_PLC_to_HMI_MachStatus.STS_INT[152] //[-]     Can diagnostic Channel 1
(*CAN Network*)    IO.Network.CAN.Sts.Ch_Status[2].iErrorCntRx;                  := _102_From_PLC_to_HMI_MachStatus.STS_INT[153] //[-]     Can diagnostic Channel 2
(*CAN Network*)    IO.Network.CAN.Sts.Ch_Status[2].iErrorCntTx;                  := _102_From_PLC_to_HMI_MachStatus.STS_INT[154] //[-]     Can diagnostic Channel 2
(*CAN Network*)    IO.Network.CAN.Sts.Ch_Status[2].DiagInfo;                     := _102_From_PLC_to_HMI_MachStatus.STS_INT[155] //[-]     Can diagnostic Channel 2
(*CAN Network*)    IO.Network.CAN.Sts.Ch_Status[2].iBusLoad;                     := _102_From_PLC_to_HMI_MachStatus.STS_INT[156] //[-]     Can diagnostic Channel 2
(*CAN Network*)    IO.Network.CAN.Sts.Ch_Status[3].iErrorCntRx;                  := _102_From_PLC_to_HMI_MachStatus.STS_INT[157] //[-]     Can diagnostic Channel 3
(*CAN Network*)    IO.Network.CAN.Sts.Ch_Status[3].iErrorCntTx;                  := _102_From_PLC_to_HMI_MachStatus.STS_INT[158] //[-]     Can diagnostic Channel 3
(*CAN Network*)    IO.Network.CAN.Sts.Ch_Status[3].DiagInfo;                     := _102_From_PLC_to_HMI_MachStatus.STS_INT[159] //[-]     Can diagnostic Channel 3
(*CAN Network*)    IO.Network.CAN.Sts.Ch_Status[3].iBusLoad;                     := _102_From_PLC_to_HMI_MachStatus.STS_INT[160] //[-]     Can diagnostic Channel 3
(*CAN Network*)    i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[161] //[-]     
(*CAN Network*)    i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[162] //[-]     
(*CAN Network*)    i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[163] //[-]     
(*CAN Network*)    i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[164] //[-]     
(*CAN Network*)    i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[165] //[-]     
(*CAN Network*)    i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[166] //[-]     
(*CAN Network*)    i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[167] //[-]     
(*CAN Network*)    i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[168] //[-]     
(*CAN Network*)    i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[169] //[-]     
(*CAN Network*)    i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[170] //[-]     
(*CAN Network*)    i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[171] //[-]     
(*CAN Network*)    i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[172] //[-]     
(*CAN Network*)    i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[173] //[-]     
(*CAN Network*)    i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[174] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[175] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[176] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[177] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[178] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[179] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[180] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[181] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[182] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[183] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[184] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[185] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[186] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[187] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[188] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[189] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[190] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[191] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[192] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[193] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[194] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[195] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[196] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[197] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[198] //[-]     
(*Spare*)          i_Spare;                                                      := _102_From_PLC_to_HMI_MachStatus.STS_INT[199] //[-]     

////////////////////////////////////////////////////////////
// STS DINT
////////////////////////////////////////////////////////////

(*Statistics*) IO.Statistics.Sts.Dredging_Pump_Working_Hours; := _102_From_PLC_to_HMI_MachStatus.STS_DINT[0] // Dredging pump working hours
(*Statistics*) IO.Statistics.Sts.Excavators_Working_Hours;    := _102_From_PLC_to_HMI_MachStatus.STS_DINT[1] // Excavator working hours
(*Statistics*) IO.Statistics.Sts.Engine_Running_Hours;        := _102_From_PLC_to_HMI_MachStatus.STS_DINT[2] // Dredging pump working hours since last maintenance